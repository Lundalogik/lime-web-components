(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"./doc/tutorials/hello-world.mdx":function(e,n,t){"use strict";t.r(n);var a=t("./node_modules/react/index.js"),o=t.n(a),m=t("./node_modules/@mdx-js/tag/dist/index.js");function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},m=Object.keys(e);for(a=0;a<m.length;a++)t=m[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(a=0;a<m.length;a++)t=m[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}n.default=function(e){var n=e.components;r(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",components:n},o.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"hello-world"}},"Hello, world!"),o.a.createElement(m.MDXTag,{name:"p",components:n},"This guide aims to provide a basic setup, create a simple web component and display it on the object card."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"creating-a-plugin"}},"Creating a plugin"),o.a.createElement(m.MDXTag,{name:"p",components:n},"To get started, run ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"lime-project")," to create a new plugin"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh",metaString:""}},"lime-project new plugin\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"It can be named anything, but in this guide we are sticking to the default and naming it ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"My Plugin"),"."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"generating-a-web-component"}},"Generating a web component"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Enter the plugin directory and generate a new web component:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh",metaString:""}},"cd my-plugin\nlime-project generate web-component hello-world\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"When the first component is created, some project setup is needed which might take a while to complete."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"rendering-the-component"}},"Rendering the component"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Once the setup is complete, we can change directory to the root directory of the web components, and start our favorite editor."),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh",metaString:""}},"cd my_plugin/web_components/lwc-components\ncode .\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Our hello-world component is located in ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"src/components/lwc-my-plugin-hello-world/lwc-my-plugin-hello-world.tsx"),". The file contains a lot of auto generated code that is useful, but not required for our simple hello-world component. We can remove most of it, but we have to keep the properties that belong to the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"LimeWebComponent")," interface, along with the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"render")," method."),o.a.createElement(m.MDXTag,{name:"p",components:n},"The finished component should look something like this:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-tsx",metaString:""}},"import { Component, Element, Prop } from '@stencil/core';\nimport { LimeWebComponent, LimeWebComponentContext, LimeWebComponentPlatform } from 'lime-web-component-interfaces';\n\n@Component({\n    tag: 'lwc-my-plugin-hello-world',\n    shadow: true\n})\nexport class HelloWorld implements LimeWebComponent {\n    @Prop()\n    public platform: LimeWebComponentPlatform;\n\n    @Prop()\n    public context: LimeWebComponentContext;\n\n    @Element()\n    public element: HTMLElement;\n\n    public render() {\n        return 'Hello, world!';\n    }\n}\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"We can now start the development environment by executing the following from the console."),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},"npm start\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Once the server has started, we can visit ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"http://localhost:3000/lwc-my-plugin-hello-world")," and see the component render itself."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"configuring-a-slot"}},"Configuring a slot"),o.a.createElement(m.MDXTag,{name:"p",components:n},"To add this component to the object card, all we need to do is edit ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"lwc.config.json")," and add our desired slot."),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-json",metaString:""}},'[\n    {\n        "name": "lwc-my-plugin-hello-world",\n        "slot": "object.card.head.panels"\n    }\n]\n')),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"installing-the-plugin"}},"Installing the plugin"),o.a.createElement(m.MDXTag,{name:"p",components:n},"We are now ready to install our plugin in the webclient. Change directory to the root directory of the plugin, and install the plugin with ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"limeplug")),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh",metaString:""}},"cd my-plugin\nlimeplug install .\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Once the webserver has been restarted, we should see our hello-world component render itself in the object card header."))}}}]);