import { getBackreference, getLimetype } from '.';

export const helpdesk = {
    name: 'helpdesk',
    localname: {
        singular: 'Helpdesk',
        plural: 'Helpdesk',
    },
    sort_order: 4,
    label: 'sos',
    properties: {
        title: {
            name: 'title',
            required: true,
            label: 'none',
            fieldorder: 1,
            defaultvalue: '',
            localname: 'Title',
            type: 'string',
            has_sql: false,
            length: 128,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        description: {
            name: 'description',
            required: false,
            label: 'none',
            fieldorder: 2,
            defaultvalue: '',
            localname: 'Description',
            type: 'text',
            has_sql: false,
            length: 1024,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        startdate: {
            name: 'startdate',
            required: false,
            label: 'none',
            fieldorder: 8,
            defaultvalue: null,
            localname: 'Started',
            type: 'time',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        enddate: {
            name: 'enddate',
            required: false,
            label: 'none',
            fieldorder: 10,
            defaultvalue: null,
            localname: 'Finished',
            type: 'time',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        person: {
            name: 'person',
            required: false,
            label: 'none',
            fieldorder: 4,
            defaultvalue: null,
            localname: 'Person',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('person', 'helpdesk'),
                getLimetype: () => getLimetype('person'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        coworker: {
            name: 'coworker',
            required: false,
            label: 'none',
            fieldorder: 7,
            defaultvalue: null,
            localname: 'Assigned to',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('coworker', 'helpdesk'),
                getLimetype: () => getLimetype('coworker'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        helpdesktype: {
            name: 'helpdesktype',
            required: false,
            label: 'none',
            fieldorder: 6,
            defaultvalue: null,
            localname: 'Helpdesk type',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('helpdesktype', 'helpdesk'),
                getLimetype: () => getLimetype('helpdesktype'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        sortfield: {
            name: 'sortfield',
            required: false,
            label: 'none',
            fieldorder: 13,
            defaultvalue: '',
            localname: 'Sort field',
            type: 'string',
            has_sql: false,
            length: 32,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        document: {
            name: 'document',
            required: false,
            label: 'none',
            fieldorder: 15,
            defaultvalue: '',
            localname: 'Documents',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('document', 'helpdesk'),
                getLimetype: () => getLimetype('document'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        company: {
            name: 'company',
            required: false,
            label: 'none',
            fieldorder: 3,
            defaultvalue: null,
            localname: 'Company',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('company', 'helpdesk'),
                getLimetype: () => getLimetype('company'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        helpdeskno: {
            name: 'helpdeskno',
            required: false,
            label: 'key',
            fieldorder: 11,
            defaultvalue: null,
            localname: 'Helpdeskno',
            type: 'integer',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        todo: {
            name: 'todo',
            required: false,
            label: 'none',
            fieldorder: 16,
            defaultvalue: '',
            localname: "To-do's",
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('todo', 'helpdesk'),
                getLimetype: () => getLimetype('todo'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        history: {
            name: 'history',
            required: false,
            label: 'none',
            fieldorder: 14,
            defaultvalue: '',
            localname: 'History',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('history', 'helpdesk'),
                getLimetype: () => getLimetype('history'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        statuscolor: {
            name: 'statuscolor',
            required: false,
            label: 'none',
            fieldorder: 12,
            defaultvalue: {
                key: 'empty',
                text: '',
                inactive: false,
            },
            localname: 'Status color',
            type: 'option',
            has_sql: false,
            options: [
                {
                    key: 'empty',
                    text: '',
                    inactive: false,
                },
                {
                    key: 'new',
                    text: 'New',
                    inactive: false,
                },
                {
                    key: 'ongoing',
                    text: 'Ongoing',
                    inactive: false,
                },
                {
                    key: 'parked',
                    text: 'Parked',
                    inactive: false,
                },
                {
                    key: 'finished',
                    text: 'Done',
                    inactive: false,
                },
            ],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        email: {
            name: 'email',
            required: false,
            label: 'none',
            fieldorder: 5,
            defaultvalue: '',
            localname: 'Email',
            type: 'link',
            has_sql: false,
            length: 100,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        nextactiondate: {
            name: 'nextactiondate',
            required: false,
            label: 'none',
            fieldorder: 9,
            defaultvalue: null,
            localname: 'Next action',
            type: 'time',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        id: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'id',
            localname: 'Record ID (System)',
            name: 'id',
            required: false,
            type: 'system',
            ui: {},
        },
        createduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createduser',
            localname: 'Created by (System)',
            name: 'createduser',
            required: false,
            type: 'system',
            ui: {},
        },
        createdtime: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createdtime',
            localname: 'Created (System)',
            name: 'createdtime',
            required: false,
            type: 'system',
            ui: {},
        },
        timestamp: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'timestamp',
            localname: 'Last updated (System)',
            name: 'timestamp',
            required: false,
            type: 'system',
            ui: {},
        },
        updateduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'updateduser',
            localname: 'Last updated by (System)',
            name: 'updateduser',
            required: false,
            type: 'system',
            ui: {},
        },
    },
    acl: {
        read: true,
        update: true,
        create: true,
        delete: true,
    },
    ui: {
        icon: 'decision',
        color: 'lime-light-grey',
        create: false,
        descriptive: ['helpdeskno'],
    },
};
