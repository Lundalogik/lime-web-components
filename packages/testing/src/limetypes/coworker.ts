import { getBackreference, getLimetype } from '.';

export const coworker = {
    name: 'coworker',
    localname: {
        singular: 'Coworker',
        plural: 'Coworkers',
    },
    sort_order: 9,
    label: 'user',
    properties: {
        name: {
            name: 'name',
            required: false,
            label: 'name',
            fieldorder: 4,
            defaultvalue: '',
            localname: 'Name',
            type: 'string',
            has_sql: false,
            length: 83,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        phone: {
            name: 'phone',
            required: false,
            label: 'businesstelephonenumber',
            fieldorder: 5,
            defaultvalue: '',
            localname: 'Direct phone',
            type: 'phone',
            has_sql: false,
            length: 32,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        mobilephone: {
            name: 'mobilephone',
            required: false,
            label: 'mobiletelephonenumber',
            fieldorder: 6,
            defaultvalue: '',
            localname: 'Mobile phone',
            type: 'phone',
            has_sql: false,
            length: 32,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        email: {
            name: 'email',
            required: false,
            label: 'primaryemailaddress',
            fieldorder: 7,
            defaultvalue: '',
            localname: 'Email',
            type: 'link',
            has_sql: false,
            length: 128,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        username: {
            name: 'username',
            required: false,
            label: 'none',
            fieldorder: 9,
            defaultvalue: null,
            localname: 'User name',
            type: 'user',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        inactive: {
            name: 'inactive',
            required: false,
            label: 'inactive',
            fieldorder: 11,
            defaultvalue: false,
            localname: 'Inactive',
            type: 'yesno',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        deal: {
            name: 'deal',
            required: false,
            label: 'none',
            fieldorder: 20,
            defaultvalue: '',
            localname: 'My Deals (HIDDEN)',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('deal', 'coworker'),
                getLimetype: () => getLimetype('deal'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        campaign: {
            name: 'campaign',
            required: false,
            label: 'none',
            fieldorder: 19,
            defaultvalue: '',
            localname: 'My market activities (HIDDEN)',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('campaign', 'coworker'),
                getLimetype: () => getLimetype('campaign'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        company: {
            name: 'company',
            required: false,
            label: 'none',
            fieldorder: 17,
            defaultvalue: '',
            localname: 'My Companies (HIDDEN)',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('company', 'coworker'),
                getLimetype: () => getLimetype('company'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        document: {
            name: 'document',
            required: false,
            label: 'none',
            fieldorder: 18,
            defaultvalue: '',
            localname: 'My Documents (HIDDEN)',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('document', 'coworker'),
                getLimetype: () => getLimetype('document'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        office: {
            name: 'office',
            required: false,
            label: 'none',
            fieldorder: 8,
            defaultvalue: null,
            localname: 'Office',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('office', 'coworker'),
                getLimetype: () => getLimetype('office'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        solutionimprovement: {
            name: 'solutionimprovement',
            required: false,
            label: 'none',
            fieldorder: 21,
            defaultvalue: '',
            localname: 'Solution improvements (HIDDEN)',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('solutionimprovement', 'coworker'),
                getLimetype: () => getLimetype('solutionimprovement'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        helpdesk: {
            name: 'helpdesk',
            required: false,
            label: 'none',
            fieldorder: 22,
            defaultvalue: '',
            localname: 'Helpdesk (hidden)',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('helpdesk', 'coworker'),
                getLimetype: () => getLimetype('helpdesk'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        todo: {
            name: 'todo',
            required: false,
            label: 'none',
            fieldorder: 15,
            defaultvalue: '',
            localname: "To-do's (HIDDEN)",
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('todo', 'coworker'),
                getLimetype: () => getLimetype('todo'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        history: {
            name: 'history',
            required: false,
            label: 'none',
            fieldorder: 16,
            defaultvalue: '',
            localname: 'History (HIDDEN)',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('history', 'coworker'),
                getLimetype: () => getLimetype('history'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        solutionimprovementcreatedby: {
            name: 'solutionimprovementcreatedby',
            required: false,
            label: 'none',
            fieldorder: 23,
            defaultvalue: '',
            localname: 'Solution improvements created by (HIDDEN)',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference(
                        'solutionimprovement',
                        'coworkercreatedby'
                    ),
                getLimetype: () => getLimetype('solutionimprovement'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        picture: {
            name: 'picture',
            required: false,
            label: 'none',
            fieldorder: 1,
            defaultvalue: null,
            localname: 'Picture',
            type: 'file',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        firstname: {
            name: 'firstname',
            required: true,
            label: 'firstname',
            fieldorder: 2,
            defaultvalue: '',
            localname: 'First name',
            type: 'string',
            has_sql: false,
            length: 32,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        lastname: {
            name: 'lastname',
            required: false,
            label: 'lastname',
            fieldorder: 3,
            defaultvalue: '',
            localname: 'Last name',
            type: 'string',
            has_sql: false,
            length: 50,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        target: {
            name: 'target',
            required: false,
            label: 'none',
            fieldorder: 24,
            defaultvalue: '',
            localname: 'Target',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('target', 'coworker'),
                getLimetype: () => getLimetype('target'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        lastlogintime: {
            name: 'lastlogintime',
            required: false,
            label: 'none',
            fieldorder: 12,
            defaultvalue: null,
            localname: 'Last login time',
            type: 'time',
            has_sql: true,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        infotiles: {
            name: 'infotiles',
            required: false,
            label: 'none',
            fieldorder: 25,
            defaultvalue: '',
            localname: 'InfoTiles',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('infotiles', 'coworker'),
                getLimetype: () => getLimetype('infotiles'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        nbrlogin: {
            name: 'nbrlogin',
            required: true,
            label: 'none',
            fieldorder: 13,
            defaultvalue: 0,
            localname: 'Number of logins',
            type: 'integer',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        nbrupdates: {
            name: 'nbrupdates',
            required: true,
            label: 'none',
            fieldorder: 14,
            defaultvalue: 0,
            localname: 'Number of updates',
            type: 'integer',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        admin: {
            name: 'admin',
            required: false,
            label: 'none',
            fieldorder: 10,
            defaultvalue: false,
            localname: 'Administrator',
            type: 'yesno',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        id: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'id',
            localname: 'Record ID (System)',
            name: 'id',
            required: false,
            type: 'system',
            ui: {},
        },
        createduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createduser',
            localname: 'Created by (System)',
            name: 'createduser',
            required: false,
            type: 'system',
            ui: {},
        },
        createdtime: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createdtime',
            localname: 'Created (System)',
            name: 'createdtime',
            required: false,
            type: 'system',
            ui: {},
        },
        timestamp: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'timestamp',
            localname: 'Last updated (System)',
            name: 'timestamp',
            required: false,
            type: 'system',
            ui: {},
        },
        updateduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'updateduser',
            localname: 'Last updated by (System)',
            name: 'updateduser',
            required: false,
            type: 'system',
            ui: {},
        },
    },
    acl: {
        read: true,
        update: true,
        create: true,
        delete: true,
    },
    ui: {
        icon: 'user',
        color: 'lime-yellow',
        create: false,
        descriptive: ['firstname', 'lastname'],
    },
};
