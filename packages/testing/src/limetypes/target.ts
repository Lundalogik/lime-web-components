import { getBackreference, getLimetype, getProperty } from '.';

export const target = {
    name: 'target',
    localname: {
        singular: 'Target',
        plural: 'Target',
    },
    sort_order: 16,
    label: null,
    getProperty: (property: string) => getProperty('target', property),
    properties: {
        coworker: {
            name: 'coworker',
            required: false,
            label: 'none',
            fieldorder: 4,
            defaultvalue: null,
            localname: 'Coworker',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('coworker', 'target'),
                getLimetype: () => getLimetype('coworker'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        targetdate: {
            name: 'targetdate',
            required: true,
            label: 'none',
            fieldorder: 1,
            defaultvalue: '2020-04-07T12:13:50.010172+02:00',
            localname: 'Month',
            type: 'month',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        targettype: {
            name: 'targettype',
            required: true,
            label: 'none',
            fieldorder: 2,
            defaultvalue: {
                key: 'empty',
                text: '',
                inactive: false,
            },
            localname: 'Target type',
            type: 'option',
            has_sql: false,
            options: [
                {
                    key: 'empty',
                    text: '',
                    inactive: false,
                },
                {
                    key: 'agreement',
                    text: 'Agreement',
                    inactive: false,
                },
                {
                    key: 'customervisit',
                    text: 'Customer visit',
                    inactive: false,
                },
                {
                    key: 'salescall',
                    text: 'Sales call',
                    inactive: false,
                },
            ],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        targetvalue: {
            name: 'targetvalue',
            required: true,
            label: 'none',
            fieldorder: 3,
            defaultvalue: 0,
            localname: 'Target value',
            type: 'integer',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        id: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'id',
            localname: 'Record ID (System)',
            name: 'id',
            required: false,
            type: 'system',
            ui: {},
        },
        createduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createduser',
            localname: 'Created by (System)',
            name: 'createduser',
            required: false,
            type: 'system',
            ui: {},
        },
        createdtime: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createdtime',
            localname: 'Created (System)',
            name: 'createdtime',
            required: false,
            type: 'system',
            ui: {},
        },
        timestamp: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'timestamp',
            localname: 'Last updated (System)',
            name: 'timestamp',
            required: false,
            type: 'system',
            ui: {},
        },
        updateduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'updateduser',
            localname: 'Last updated by (System)',
            name: 'updateduser',
            required: false,
            type: 'system',
            ui: {},
        },
    },
    acl: {
        read: true,
        update: true,
        create: true,
        delete: true,
    },
    ui: {
        icon: 'decision',
        color: 'lime-light-grey',
        create: false,
        descriptive: ['_id'],
    },
};
