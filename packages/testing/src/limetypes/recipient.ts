import { getBackreference, getLimetype } from '.';

export const recipient = {
    name: 'recipient',
    localname: {
        singular: 'Mailing recipient',
        plural: 'Mailing recipients',
    },
    sort_order: 21,
    label: null,
    properties: {
        person: {
            name: 'person',
            required: false,
            label: 'none',
            fieldorder: 1,
            defaultvalue: null,
            localname: 'Person',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('person', 'recipient'),
                getLimetype: () => getLimetype('person'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        mailing: {
            name: 'mailing',
            required: false,
            label: 'none',
            fieldorder: 2,
            defaultvalue: null,
            localname: 'Mailing',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('mailing', 'recipient'),
                getLimetype: () => getLimetype('mailing'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        sendoutstatus: {
            name: 'sendoutstatus',
            required: false,
            label: 'none',
            fieldorder: 3,
            defaultvalue: {
                key: 'empty',
                text: '',
                inactive: false,
            },
            localname: 'Mailing status',
            type: 'option',
            has_sql: false,
            options: [
                {
                    key: 'empty',
                    text: '',
                    inactive: false,
                },
                {
                    key: 'sent',
                    text: 'Sent',
                    inactive: false,
                },
                {
                    key: 'clicked',
                    text: 'Clicked',
                    inactive: false,
                },
                {
                    key: 'bounce',
                    text: 'Bounced',
                    inactive: false,
                },
                {
                    key: 'open',
                    text: 'Opened',
                    inactive: false,
                },
            ],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        id: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'id',
            localname: 'Record ID (System)',
            name: 'id',
            required: false,
            type: 'system',
            ui: {},
        },
        createduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createduser',
            localname: 'Created by (System)',
            name: 'createduser',
            required: false,
            type: 'system',
            ui: {},
        },
        createdtime: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createdtime',
            localname: 'Created (System)',
            name: 'createdtime',
            required: false,
            type: 'system',
            ui: {},
        },
        timestamp: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'timestamp',
            localname: 'Last updated (System)',
            name: 'timestamp',
            required: false,
            type: 'system',
            ui: {},
        },
        updateduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'updateduser',
            localname: 'Last updated by (System)',
            name: 'updateduser',
            required: false,
            type: 'system',
            ui: {},
        },
    },
    acl: {
        read: true,
        update: true,
        create: true,
        delete: true,
    },
    ui: {
        icon: 'decision',
        color: 'lime-light-grey',
        create: false,
        descriptive: ['_id'],
    },
};
