import { getBackreference, getLimetype, getProperty } from '.';

export const history = {
    name: 'history',
    localname: {
        singular: 'History',
        plural: 'History',
    },
    sort_order: 7,
    label: 'history',
    getProperty: (property: string) => getProperty('history', property),
    properties: {
        date: {
            name: 'date',
            required: true,
            label: 'startdate',
            fieldorder: 1,
            defaultvalue: '2020-04-07T12:13:49.950451+02:00',
            localname: 'Date',
            type: 'time',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        type: {
            name: 'type',
            required: true,
            label: 'category',
            fieldorder: 3,
            defaultvalue: {
                key: 'empty',
                text: '',
                inactive: false,
            },
            localname: 'Type',
            type: 'option',
            has_sql: false,
            options: [
                {
                    key: 'empty',
                    text: '',
                    inactive: false,
                },
                {
                    key: 'comment',
                    text: 'Comment',
                    inactive: false,
                },
                {
                    key: 'customervisit',
                    text: 'Customer visit',
                    inactive: false,
                },
                {
                    key: 'talkedto',
                    text: 'Talked to',
                    inactive: false,
                },
                {
                    key: 'salescall',
                    text: 'Sales call',
                    inactive: false,
                },
                {
                    key: 'sentemail',
                    text: 'Sent email',
                    inactive: false,
                },
                {
                    key: 'receivedemail',
                    text: 'Received email',
                    inactive: false,
                },
                {
                    key: 'noanswer',
                    text: 'Could not reach',
                    inactive: false,
                },
            ],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        note: {
            name: 'note',
            required: true,
            label: 'notes',
            fieldorder: 5,
            defaultvalue: '',
            localname: 'Notes',
            type: 'text',
            has_sql: false,
            length: 4000,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        company: {
            name: 'company',
            required: false,
            label: 'none',
            fieldorder: 6,
            defaultvalue: null,
            localname: 'Company',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('company', 'history'),
                getLimetype: () => getLimetype('company'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        deal: {
            name: 'deal',
            required: false,
            label: 'none',
            fieldorder: 7,
            defaultvalue: null,
            localname: 'Deal',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('deal', 'history'),
                getLimetype: () => getLimetype('deal'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        coworker: {
            name: 'coworker',
            required: false,
            label: 'responsiblecoworker',
            fieldorder: 2,
            defaultvalue: null,
            localname: 'Coworker',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('coworker', 'history'),
                getLimetype: () => getLimetype('coworker'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        helpdesk: {
            name: 'helpdesk',
            required: false,
            label: 'none',
            fieldorder: 8,
            defaultvalue: null,
            localname: 'Helpdesk',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('helpdesk', 'history'),
                getLimetype: () => getLimetype('helpdesk'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        todo: {
            name: 'todo',
            required: false,
            label: 'none',
            fieldorder: 11,
            defaultvalue: '',
            localname: "To-do's (hidden)",
            type: 'hasandbelongstomany',
            has_sql: true,
            relation: {
                getBackreference: () => getBackreference('todo', 'history'),
                getLimetype: () => getLimetype('todo'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        campaign: {
            name: 'campaign',
            required: false,
            label: 'none',
            fieldorder: 9,
            defaultvalue: null,
            localname: 'Marketing activity',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('campaign', 'history'),
                getLimetype: () => getLimetype('campaign'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        person: {
            name: 'person',
            required: false,
            label: 'none',
            fieldorder: 4,
            defaultvalue: null,
            localname: 'Person',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('person', 'history'),
                getLimetype: () => getLimetype('person'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        document: {
            name: 'document',
            required: false,
            label: 'none',
            fieldorder: 10,
            defaultvalue: null,
            localname: 'Document',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('document', 'history'),
                getLimetype: () => getLimetype('document'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        id: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'id',
            localname: 'Record ID (System)',
            name: 'id',
            required: false,
            type: 'system',
            ui: {},
        },
        createduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createduser',
            localname: 'Created by (System)',
            name: 'createduser',
            required: false,
            type: 'system',
            ui: {},
        },
        createdtime: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createdtime',
            localname: 'Created (System)',
            name: 'createdtime',
            required: false,
            type: 'system',
            ui: {},
        },
        timestamp: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'timestamp',
            localname: 'Last updated (System)',
            name: 'timestamp',
            required: false,
            type: 'system',
            ui: {},
        },
        updateduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'updateduser',
            localname: 'Last updated by (System)',
            name: 'updateduser',
            required: false,
            type: 'system',
            ui: {},
        },
    },
    acl: {
        read: true,
        update: true,
        create: true,
        delete: true,
    },
    ui: {
        icon: 'comments',
        color: 'lime-light-grey',
        create: false,
        descriptive: ['type'],
    },
};
