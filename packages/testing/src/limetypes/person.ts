import { getBackreference, getLimetype } from '.';

export const person = {
    name: 'person',
    localname: {
        singular: 'Person',
        plural: 'Persons',
    },
    sort_order: 2,
    label: 'person',
    properties: {
        firstname: {
            name: 'firstname',
            required: true,
            label: 'firstname',
            fieldorder: 1,
            defaultvalue: '',
            localname: 'First name',
            type: 'string',
            has_sql: false,
            length: 32,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        inactive: {
            name: 'inactive',
            required: false,
            label: 'inactive',
            fieldorder: 8,
            defaultvalue: false,
            localname: 'Inactive',
            type: 'yesno',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        phone: {
            name: 'phone',
            required: false,
            label: 'businesstelephonenumber',
            fieldorder: 4,
            defaultvalue: '',
            localname: 'Direct phone',
            type: 'phone',
            has_sql: false,
            length: 32,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        mobilephone: {
            name: 'mobilephone',
            required: false,
            label: 'mobiletelephonenumber',
            fieldorder: 5,
            defaultvalue: '',
            localname: 'Mobile phone',
            type: 'phone',
            has_sql: false,
            length: 32,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        email: {
            name: 'email',
            required: false,
            label: 'primaryemailaddress',
            fieldorder: 6,
            defaultvalue: '',
            localname: 'Email',
            type: 'link',
            has_sql: false,
            length: 100,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        deal: {
            name: 'deal',
            required: false,
            label: 'none',
            fieldorder: 17,
            defaultvalue: '',
            localname: 'Deals',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('deal', 'person'),
                getLimetype: () => getLimetype('deal'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        company: {
            name: 'company',
            required: false,
            label: 'none',
            fieldorder: 9,
            defaultvalue: null,
            localname: 'Company',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('company', 'person'),
                getLimetype: () => getLimetype('company'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        participant: {
            name: 'participant',
            required: false,
            label: 'none',
            fieldorder: 16,
            defaultvalue: '',
            localname: 'Marketing activity',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('participant', 'person'),
                getLimetype: () => getLimetype('participant'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        document: {
            name: 'document',
            required: false,
            label: 'none',
            fieldorder: 14,
            defaultvalue: '',
            localname: 'Documents',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('document', 'person'),
                getLimetype: () => getLimetype('document'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        lastname: {
            name: 'lastname',
            required: false,
            label: 'lastname',
            fieldorder: 2,
            defaultvalue: '',
            localname: 'Last name',
            type: 'string',
            has_sql: false,
            length: 50,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        helpdesk: {
            name: 'helpdesk',
            required: false,
            label: 'none',
            fieldorder: 19,
            defaultvalue: '',
            localname: 'Helpdesk',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('helpdesk', 'person'),
                getLimetype: () => getLimetype('helpdesk'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        name: {
            name: 'name',
            required: false,
            label: 'name',
            fieldorder: 3,
            defaultvalue: '',
            localname: 'Name',
            type: 'string',
            has_sql: false,
            length: 83,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        todo: {
            name: 'todo',
            required: false,
            label: 'none',
            fieldorder: 15,
            defaultvalue: '',
            localname: 'To-dos',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('todo', 'person'),
                getLimetype: () => getLimetype('todo'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        history: {
            name: 'history',
            required: false,
            label: 'none',
            fieldorder: 13,
            defaultvalue: '',
            localname: 'History',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('history', 'person'),
                getLimetype: () => getLimetype('history'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        position: {
            name: 'position',
            required: false,
            label: 'none',
            fieldorder: 7,
            defaultvalue: '',
            localname: 'Position',
            type: 'string',
            has_sql: false,
            length: 32,
            options: [
                {
                    key: '206801',
                    text: '',
                    inactive: false,
                },
                {
                    key: '206901',
                    text: 'Financial accountant',
                    inactive: false,
                },
                {
                    key: '207001',
                    text: 'Sales manager',
                    inactive: false,
                },
                {
                    key: '207101',
                    text: 'Purchasing manager',
                    inactive: false,
                },
                {
                    key: '207201',
                    text: 'IT-manager',
                    inactive: false,
                },
                {
                    key: '207301',
                    text: 'Consultant',
                    inactive: false,
                },
                {
                    key: '207401',
                    text: 'Customer service',
                    inactive: false,
                },
                {
                    key: '207501',
                    text: 'Marketing director',
                    inactive: false,
                },
                {
                    key: '207601',
                    text: 'Marketing assistant',
                    inactive: false,
                },
                {
                    key: '207701',
                    text: 'Salesman',
                    inactive: false,
                },
                {
                    key: '207801',
                    text: 'Technician',
                    inactive: false,
                },
                {
                    key: '207901',
                    text: 'CEO',
                    inactive: false,
                },
            ],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        expireddate: {
            name: 'expireddate',
            required: false,
            label: 'none',
            fieldorder: 11,
            defaultvalue: null,
            localname: 'Last date for anonymization',
            type: 'time',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        anonymizeddate: {
            name: 'anonymizeddate',
            required: false,
            label: 'none',
            fieldorder: 12,
            defaultvalue: null,
            localname: 'Anonymize date',
            type: 'time',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        consent: {
            name: 'consent',
            required: false,
            label: 'none',
            fieldorder: 20,
            defaultvalue: '',
            localname: 'Legal base & consents',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('consent', 'person'),
                getLimetype: () => getLimetype('consent'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        emailhardbounce: {
            name: 'emailhardbounce',
            required: false,
            label: 'none',
            fieldorder: 10,
            defaultvalue: false,
            localname: 'E-mail bounce',
            type: 'yesno',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        recipient: {
            name: 'recipient',
            required: false,
            label: 'none',
            fieldorder: 18,
            defaultvalue: '',
            localname: 'Mailings',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('recipient', 'person'),
                getLimetype: () => getLimetype('recipient'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        id: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'id',
            localname: 'Record ID (System)',
            name: 'id',
            required: false,
            type: 'system',
            ui: {},
        },
        createduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createduser',
            localname: 'Created by (System)',
            name: 'createduser',
            required: false,
            type: 'system',
            ui: {},
        },
        createdtime: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createdtime',
            localname: 'Created (System)',
            name: 'createdtime',
            required: false,
            type: 'system',
            ui: {},
        },
        timestamp: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'timestamp',
            localname: 'Last updated (System)',
            name: 'timestamp',
            required: false,
            type: 'system',
            ui: {},
        },
        updateduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'updateduser',
            localname: 'Last updated by (System)',
            name: 'updateduser',
            required: false,
            type: 'system',
            ui: {},
        },
    },
    acl: {
        read: true,
        update: true,
        create: true,
        delete: true,
    },
    ui: {
        icon: 'user_group_man_man',
        color: 'lime-orange',
        create: true,
        descriptive: ['firstname', 'lastname'],
    },
};
