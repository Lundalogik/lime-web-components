import { getBackreference, getLimetype } from '.';

export const campaign = {
    name: 'campaign',
    localname: {
        singular: 'Marketing activity',
        plural: 'Market activities',
    },
    sort_order: 5,
    label: 'campaign',
    properties: {
        name: {
            name: 'name',
            required: true,
            label: 'name',
            fieldorder: 1,
            defaultvalue: '',
            localname: 'Name',
            type: 'string',
            has_sql: false,
            length: 128,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        campaignstatus: {
            name: 'campaignstatus',
            required: false,
            label: 'category',
            fieldorder: 2,
            defaultvalue: {
                key: 'planned',
                text: 'Planned',
                inactive: false,
            },
            localname: 'Campaign status',
            type: 'option',
            has_sql: false,
            options: [
                {
                    key: 'empty',
                    text: '',
                    inactive: false,
                },
                {
                    key: 'cancelled',
                    text: 'Cancelled',
                    inactive: false,
                },
                {
                    key: 'planned',
                    text: 'Planned',
                    inactive: false,
                },
                {
                    key: 'ongoing',
                    text: 'Ongoing',
                    inactive: false,
                },
                {
                    key: 'finished',
                    text: 'Finished',
                    inactive: false,
                },
            ],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        type: {
            name: 'type',
            required: false,
            label: 'category',
            fieldorder: 4,
            defaultvalue: {
                key: 'empty',
                text: '',
                inactive: false,
            },
            localname: 'Type',
            type: 'option',
            has_sql: false,
            options: [
                {
                    key: 'empty',
                    text: '',
                    inactive: false,
                },
                {
                    key: 'sendout',
                    text: 'Mailing',
                    inactive: false,
                },
                {
                    key: 'email',
                    text: 'E-mail campaign',
                    inactive: false,
                },
                {
                    key: 'add',
                    text: 'Advertisement',
                    inactive: false,
                },
                {
                    key: 'dm',
                    text: 'Direct marketing',
                    inactive: false,
                },
                {
                    key: 'customeractivity',
                    text: 'Customer activity',
                    inactive: false,
                },
                {
                    key: 'fair',
                    text: 'Fair',
                    inactive: false,
                },
                {
                    key: 'seminary',
                    text: 'Seminary',
                    inactive: false,
                },
            ],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        location: {
            name: 'location',
            required: false,
            label: 'none',
            fieldorder: 5,
            defaultvalue: '',
            localname: 'Location',
            type: 'string',
            has_sql: false,
            length: 32,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        startdate: {
            name: 'startdate',
            required: false,
            label: 'startdate',
            fieldorder: 6,
            defaultvalue: null,
            localname: 'Start date',
            type: 'time',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        enddate: {
            name: 'enddate',
            required: false,
            label: 'duedate',
            fieldorder: 7,
            defaultvalue: null,
            localname: 'End date',
            type: 'time',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        budget: {
            name: 'budget',
            required: true,
            label: 'none',
            fieldorder: 8,
            defaultvalue: 0,
            localname: 'Budget',
            type: 'decimal',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        outcome: {
            name: 'outcome',
            required: true,
            label: 'none',
            fieldorder: 9,
            defaultvalue: 0,
            localname: 'Outcome',
            type: 'decimal',
            has_sql: false,
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        purpose: {
            name: 'purpose',
            required: false,
            label: 'none',
            fieldorder: 10,
            defaultvalue: '',
            localname: 'Purpose',
            type: 'string',
            has_sql: false,
            length: 256,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        goal: {
            name: 'goal',
            required: false,
            label: 'none',
            fieldorder: 11,
            defaultvalue: '',
            localname: 'Goal',
            type: 'string',
            has_sql: false,
            length: 256,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        workmode: {
            name: 'workmode',
            required: false,
            label: 'none',
            fieldorder: 12,
            defaultvalue: '',
            localname: 'Approach',
            type: 'string',
            has_sql: false,
            length: 256,
            options: [],
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        document: {
            name: 'document',
            required: false,
            label: 'none',
            fieldorder: 15,
            defaultvalue: '',
            localname: 'Documents',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('document', 'campaign'),
                getLimetype: () => getLimetype('document'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        participant: {
            name: 'participant',
            required: false,
            label: 'none',
            fieldorder: 13,
            defaultvalue: '',
            localname: 'Participants',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('participant', 'campaign'),
                getLimetype: () => getLimetype('participant'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        coworker: {
            name: 'coworker',
            required: false,
            label: 'none',
            fieldorder: 3,
            defaultvalue: null,
            localname: 'Responsible',
            type: 'belongsto',
            has_sql: false,
            relation: {
                getBackreference: () =>
                    getBackreference('coworker', 'campaign'),
                getLimetype: () => getLimetype('coworker'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        todo: {
            name: 'todo',
            required: false,
            label: 'none',
            fieldorder: 16,
            defaultvalue: '',
            localname: 'To-dos',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('todo', 'campaign'),
                getLimetype: () => getLimetype('todo'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        history: {
            name: 'history',
            required: false,
            label: 'none',
            fieldorder: 14,
            defaultvalue: '',
            localname: 'History',
            type: 'hasmany',
            has_sql: false,
            relation: {},
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        mailing: {
            name: 'mailing',
            required: false,
            label: 'none',
            fieldorder: 17,
            defaultvalue: '',
            localname: 'Mailings',
            type: 'hasmany',
            has_sql: false,
            relation: {
                getBackreference: () => getBackreference('mailing', 'campaign'),
                getLimetype: () => getLimetype('mailing'),
            },
            acl: {
                read: true,
                update: true,
                create: true,
                delete: true,
            },
            ui: {},
        },
        id: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'id',
            localname: 'Record ID (System)',
            name: 'id',
            required: false,
            type: 'system',
            ui: {},
        },
        createduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createduser',
            localname: 'Created by (System)',
            name: 'createduser',
            required: false,
            type: 'system',
            ui: {},
        },
        createdtime: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'createdtime',
            localname: 'Created (System)',
            name: 'createdtime',
            required: false,
            type: 'system',
            ui: {},
        },
        timestamp: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'timestamp',
            localname: 'Last updated (System)',
            name: 'timestamp',
            required: false,
            type: 'system',
            ui: {},
        },
        updateduser: {
            acl: {},
            defaultvalue: null,
            fieldorder: 1,
            label: 'updateduser',
            localname: 'Last updated by (System)',
            name: 'updateduser',
            required: false,
            type: 'system',
            ui: {},
        },
    },
    acl: {
        read: true,
        update: true,
        create: true,
        delete: true,
    },
    ui: {
        icon: 'megaphone',
        color: 'lime-red',
        create: false,
        descriptive: ['name'],
    },
};
